{"version":3,"file":"PodJwksHttpHandler.js","sourceRoot":"","sources":["../../../../src/notification/webhook-subscription-2021/webhook-auth/PodJwksHttpHandler.ts"],"names":[],"mappings":";;;AAEA,6DAA0D;AAM7C,QAAA,YAAY,GAAG,UAAU,CAAC;AAEvC,MAAa,kBAAmB,SAAQ,yBAAW;IAGjD,YAAmB,IAA4B;QAC7C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAChD,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAAuB;QACzC,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,oBAAY,CAAC,CAAC;QAE3E,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAC;QAChE,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;QACjD,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;IACvB,CAAC;CACF;AAfD,gDAeC","sourcesContent":["import type { JwksKeyGenerator } from '../../../identity/configuration/JwksKeyGenerator';\nimport type { HttpHandlerInput } from '../../../server/HttpHandler';\nimport { HttpHandler } from '../../../server/HttpHandler';\n\nexport interface PodJwksHttpHandlerArgs {\n  jwksKeyGenerator: JwksKeyGenerator;\n}\n\nexport const POD_JWKS_KEY = 'POD_JWKS';\n\nexport class PodJwksHttpHandler extends HttpHandler {\n  private readonly jwksKeyGenerator: JwksKeyGenerator;\n\n  public constructor(args: PodJwksHttpHandlerArgs) {\n    super();\n    this.jwksKeyGenerator = args.jwksKeyGenerator;\n  }\n\n  public async handle(input: HttpHandlerInput): Promise<void> {\n    const jwksPublic = await this.jwksKeyGenerator.getPublicJwks(POD_JWKS_KEY);\n\n    input.response.setHeader('Content-Type', 'application/ld+json');\n    input.response.write(JSON.stringify(jwksPublic));\n    input.response.end();\n  }\n}\n"]}