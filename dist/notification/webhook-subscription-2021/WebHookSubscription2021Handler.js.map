{"version":3,"file":"WebHookSubscription2021Handler.js","sourceRoot":"","sources":["../../../src/notification/webhook-subscription-2021/WebHookSubscription2021Handler.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { Readable } from 'stream';\nimport { v4 } from 'uuid';\nimport type { HttpClient } from '../../http/client/HttpClient';\nimport type { ResourceIdentifier } from '../../http/representation/ResourceIdentifier';\nimport { getLoggerFor } from '../../logging/LogUtil';\nimport type { Guarded } from '../../util/GuardedStream';\nimport { guardStream } from '../../util/GuardedStream';\nimport { joinUrl, trimTrailingSlashes } from '../../util/PathUtil';\nimport { BaseSubscriptionHandler } from '../BaseSubscriptionHandler';\nimport type { Subscription } from '../SubscriptionHandler';\n\nexport interface WebHookSubscription2021 extends Subscription {\n  id: string;\n  target: string;\n}\n\nexport interface WebHookSubscription2021Args {\n  /**\n   * Writes out the response of the operation.\n   */\n  httpClient: HttpClient;\n  webhookUnsubscribePath: string;\n  baseUrl: string;\n}\n\nexport class WebHookSubscription2021Handler extends BaseSubscriptionHandler {\n  protected readonly logger = getLoggerFor(this);\n\n  private readonly httpClient: HttpClient;\n  private readonly webhookUnsubscribePath: string;\n  private readonly baseUrl: string;\n\n  public constructor(args: WebHookSubscription2021Args) {\n    super();\n    this.httpClient = args.httpClient;\n    this.webhookUnsubscribePath = args.webhookUnsubscribePath;\n    this.baseUrl = args.baseUrl;\n\n    // To get \"this\" to work, you need to bind all the methods\n    this.subscribe = this.subscribe.bind(this);\n    this.getResponseData = this.getResponseData.bind(this);\n    this.getType = this.getType.bind(this);\n    this.onResourceChanged = this.onResourceChanged.bind(this);\n    this.onResourceCreated = this.onResourceCreated.bind(this);\n    this.onResourceDeleted = this.onResourceDeleted.bind(this);\n    this.onResourcesChanged = this.onResourcesChanged.bind(this);\n    this.sendNotification = this.sendNotification.bind(this);\n  }\n\n  public subscribe(request: any): Subscription {\n    const subscription: WebHookSubscription2021 = {\n      type: this.getType(),\n      target: request.target,\n      id: encodeURIComponent(`${request.topic}~~~${v4()}`),\n    };\n    return subscription;\n  }\n\n  private getUnsubscribeEndpoint(subscriptionId: string): string {\n    return trimTrailingSlashes(joinUrl(this.baseUrl, this.webhookUnsubscribePath, subscriptionId));\n  }\n\n  public getResponseData(subscription: Subscription): Guarded<Readable> | undefined {\n    const webhookSubscription = subscription as WebHookSubscription2021;\n    if (webhookSubscription.target && webhookSubscription.id) {\n      return guardStream(\n        Readable.from(\n          JSON.stringify({\n            '@context': 'https://www.w3.org/ns/solid/notification/v1',\n            type: 'WebHookSubscription2021',\n            target: webhookSubscription.target,\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            unsubscribe_endpoint: this.getUnsubscribeEndpoint(webhookSubscription.id),\n          }),\n        ),\n      );\n    }\n    return undefined;\n  }\n\n  public getType(): string {\n    return 'WebHookSubscription2021';\n  }\n\n  public async onResourceCreated(\n    resource: ResourceIdentifier,\n    subscription: Subscription,\n  ): Promise<void> {\n    this.logger.info(`Resource created ${resource.path}`);\n    this.sendNotification('Create', resource, subscription);\n  }\n\n  public async onResourceChanged(\n    resource: ResourceIdentifier,\n    subscription: Subscription,\n  ): Promise<void> {\n    this.logger.info(`Resource changed ${resource.path}`);\n    this.sendNotification('Update', resource, subscription);\n  }\n\n  public async onResourceDeleted(\n    resource: ResourceIdentifier,\n    subscription: Subscription,\n  ): Promise<void> {\n    this.logger.info(`Resource deleted ${resource.path}`);\n    this.sendNotification('Delete', resource, subscription);\n  }\n\n  private sendNotification(\n    type: string,\n    resource: ResourceIdentifier,\n    subscription: Subscription,\n  ): void {\n    const { target, id } = subscription as WebHookSubscription2021;\n\n    const payload = {\n      '@context': [\n        'https://www.w3.org/ns/activitystreams',\n        'https://www.w3.org/ns/solid/notification/v1',\n      ],\n      id: `urn:uuid:${v4()}`,\n      type: [ type ],\n      object: {\n        id: resource.path,\n      },\n      published: new Date().toISOString(),\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      unsubscribe_endpoint: this.getUnsubscribeEndpoint(id),\n    };\n\n    const requestBody = JSON.stringify(payload);\n\n    const reqOptions = {\n      method: 'POST',\n      headers: {\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        'Content-Type': 'application/json',\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        'Content-Length': Buffer.byteLength(requestBody),\n      },\n    };\n\n    this.httpClient.call(target, reqOptions, requestBody, (res): void => {\n      console.log(`STATUS: ${res.statusCode}`);\n      console.log(`HEADERS: ${JSON.stringify(res.headers)}`);\n      res.setEncoding('utf8');\n      res.on('data', (chunk): void => {\n        console.log(`BODY: ${chunk}`);\n      });\n      res.on('end', (): void => {\n        console.log('No more data in response.');\n      });\n    });\n  }\n}\n"]}