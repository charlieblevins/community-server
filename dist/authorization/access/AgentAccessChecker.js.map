{"version":3,"file":"AgentAccessChecker.js","sourceRoot":"","sources":["../../../src/authorization/access/AgentAccessChecker.ts"],"names":[],"mappings":";;;AAAA,0DAA8C;AAE9C,mDAAgD;AAEhD;;GAEG;AACH,MAAa,kBAAmB,SAAQ,6BAAa;IAC5C,KAAK,CAAC,MAAM,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAqB;QAC9D,IAAI,OAAO,UAAU,CAAC,KAAK,KAAK,QAAQ,EAAE;YACxC,OAAO,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,kBAAG,CAAC,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5E;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAPD,gDAOC","sourcesContent":["import { ACL } from '../../util/Vocabularies';\nimport type { AccessCheckerArgs } from './AccessChecker';\nimport { AccessChecker } from './AccessChecker';\n\n/**\n * Checks if the given WebID has been given access.\n */\nexport class AgentAccessChecker extends AccessChecker {\n  public async handle({ acl, rule, credential }: AccessCheckerArgs): Promise<boolean> {\n    if (typeof credential.webId === 'string') {\n      return acl.countQuads(rule, ACL.terms.agent, credential.webId, null) !== 0;\n    }\n    return false;\n  }\n}\n"]}