{"version":3,"file":"Authorizer.js","sourceRoot":"","sources":["../../src/authorization/Authorizer.ts"],"names":[],"mappings":";;;AAEA,gEAA6D;AAsB7D;;;GAGG;AACH,MAAsB,UAAW,SAAQ,2BAA6B;CAAG;AAAzE,gCAAyE","sourcesContent":["import type { CredentialSet } from '../authentication/Credentials';\nimport type { ResourceIdentifier } from '../http/representation/ResourceIdentifier';\nimport { AsyncHandler } from '../util/handlers/AsyncHandler';\nimport type { AccessMode, PermissionSet } from './permissions/Permissions';\n\nexport interface AuthorizerInput {\n  /**\n   * Credentials of the entity that wants to use the resource.\n   */\n  credentials: CredentialSet;\n  /**\n   * Identifier of the resource that will be read/modified.\n   */\n  identifier: ResourceIdentifier;\n  /**\n   * Modes that are requested on the resource.\n   */\n  modes: Set<AccessMode>;\n  /**\n   * Permissions that are available for the request.\n   */\n  permissionSet: PermissionSet;\n}\n\n/**\n * Verifies if the credentials provide access with the given permissions on the resource.\n * An {@link Error} with the necessary explanation will be thrown when permissions are not granted.\n */\nexport abstract class Authorizer extends AsyncHandler<AuthorizerInput> {}\n"]}