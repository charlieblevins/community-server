{"version":3,"file":"DeleteOperationHandler.js","sourceRoot":"","sources":["../../../src/http/ldp/DeleteOperationHandler.ts"],"names":[],"mappings":";;;AACA,uFAAoF;AACpF,0FAAuF;AAGvF,yDAAsD;AAEtD;;;GAGG;AACH,MAAa,sBAAuB,SAAQ,mCAAgB;IAG1D,YAAmB,KAAoB;QACrC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,EAAE,SAAS,EAAyB;QACzD,IAAI,SAAS,CAAC,MAAM,KAAK,QAAQ,EAAE;YACjC,MAAM,IAAI,iDAAuB,CAAC,8CAA8C,CAAC,CAAC;SACnF;IACH,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,EAAyB;QACtD,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;QACxE,OAAO,IAAI,mDAAwB,EAAE,CAAC;IACxC,CAAC;CACF;AAlBD,wDAkBC","sourcesContent":["import type { ResourceStore } from '../../storage/ResourceStore';\nimport { NotImplementedHttpError } from '../../util/errors/NotImplementedHttpError';\nimport { ResetResponseDescription } from '../output/response/ResetResponseDescription';\nimport type { ResponseDescription } from '../output/response/ResponseDescription';\nimport type { OperationHandlerInput } from './OperationHandler';\nimport { OperationHandler } from './OperationHandler';\n\n/**\n * Handles DELETE {@link Operation}s.\n * Calls the deleteResource function from a {@link ResourceStore}.\n */\nexport class DeleteOperationHandler extends OperationHandler {\n  private readonly store: ResourceStore;\n\n  public constructor(store: ResourceStore) {\n    super();\n    this.store = store;\n  }\n\n  public async canHandle({ operation }: OperationHandlerInput): Promise<void> {\n    if (operation.method !== 'DELETE') {\n      throw new NotImplementedHttpError('This handler only supports DELETE operations');\n    }\n  }\n\n  public async handle({ operation }: OperationHandlerInput): Promise<ResponseDescription> {\n    await this.store.deleteResource(operation.target, operation.conditions);\n    return new ResetResponseDescription();\n  }\n}\n"]}