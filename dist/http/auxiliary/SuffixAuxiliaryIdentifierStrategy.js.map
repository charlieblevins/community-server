{"version":3,"file":"SuffixAuxiliaryIdentifierStrategy.js","sourceRoot":"","sources":["../../../src/http/auxiliary/SuffixAuxiliaryIdentifierStrategy.ts"],"names":[],"mappings":";;;AAAA,+EAA4E;AAI5E;;;GAGG;AACH,MAAa,iCAAiC;IAG5C,YAAmB,MAAc;QAC/B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACvB,MAAM,IAAI,yCAAmB,CAAC,mCAAmC,CAAC,CAAC;SACpE;QACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,sBAAsB,CAAC,UAA8B;QAC1D,OAAO,EAAE,IAAI,EAAE,GAAG,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;IACtD,CAAC;IAEM,uBAAuB,CAAC,UAA8B;QAC3D,OAAO,CAAE,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAE,CAAC;IACrD,CAAC;IAEM,qBAAqB,CAAC,UAA8B;QACzD,OAAO,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAEM,oBAAoB,CAAC,UAA8B;QACxD,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE;YAC3C,MAAM,IAAI,yCAAmB,CAAC,GAAG,UAAU,CAAC,IAAI,oBAAoB,IAAI,CAAC,MAAM,gCAAgC,CAAC,CAAC;SAClH;QACD,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC;IACjE,CAAC;CACF;AA5BD,8EA4BC","sourcesContent":["import { InternalServerError } from '../../util/errors/InternalServerError';\nimport type { ResourceIdentifier } from '../representation/ResourceIdentifier';\nimport type { AuxiliaryIdentifierStrategy } from './AuxiliaryIdentifierStrategy';\n\n/**\n * Helper class that uses a suffix to determine if a resource is an auxiliary resource or not.\n * Simple string matching is used, so the dot needs to be included if needed, e.g. \".acl\".\n */\nexport class SuffixAuxiliaryIdentifierStrategy implements AuxiliaryIdentifierStrategy {\n  protected readonly suffix: string;\n\n  public constructor(suffix: string) {\n    if (suffix.length === 0) {\n      throw new InternalServerError('Suffix length should be non-zero.');\n    }\n    this.suffix = suffix;\n  }\n\n  public getAuxiliaryIdentifier(identifier: ResourceIdentifier): ResourceIdentifier {\n    return { path: `${identifier.path}${this.suffix}` };\n  }\n\n  public getAuxiliaryIdentifiers(identifier: ResourceIdentifier): ResourceIdentifier[] {\n    return [ this.getAuxiliaryIdentifier(identifier) ];\n  }\n\n  public isAuxiliaryIdentifier(identifier: ResourceIdentifier): boolean {\n    return identifier.path.endsWith(this.suffix);\n  }\n\n  public getSubjectIdentifier(identifier: ResourceIdentifier): ResourceIdentifier {\n    if (!this.isAuxiliaryIdentifier(identifier)) {\n      throw new InternalServerError(`${identifier.path} does not end on ${this.suffix} so no conversion is possible.`);\n    }\n    return { path: identifier.path.slice(0, -this.suffix.length) };\n  }\n}\n"]}