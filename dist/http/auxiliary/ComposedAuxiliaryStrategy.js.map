{"version":3,"file":"ComposedAuxiliaryStrategy.js","sourceRoot":"","sources":["../../../src/http/auxiliary/ComposedAuxiliaryStrategy.ts"],"names":[],"mappings":";;;AAQA;;;GAGG;AACH,MAAa,yBAAyB;IAOpC,YAAmB,kBAA+C,EAAE,iBAAqC,EACvG,SAAqB,EAAE,gBAAgB,GAAG,KAAK,EAAE,cAAc,GAAG,KAAK;QACvE,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACvC,CAAC;IAEM,sBAAsB,CAAC,UAA8B;QAC1D,OAAO,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC;IACpE,CAAC;IAEM,uBAAuB,CAAC,UAA8B;QAC3D,OAAO,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,UAAU,CAAC,CAAC;IACrE,CAAC;IAEM,qBAAqB,CAAC,UAA8B;QACzD,OAAO,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;IACnE,CAAC;IAEM,oBAAoB,CAAC,UAA8B;QACxD,OAAO,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,UAAU,CAAC,CAAC;IAClE,CAAC;IAEM,oBAAoB;QACzB,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAEM,gBAAgB;QACrB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,QAAgC;QACvD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;SACpD;IACH,CAAC;IAEM,KAAK,CAAC,QAAQ,CAAC,cAA8B;QAClD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SAClD;IACH,CAAC;CACF;AAnDD,8DAmDC","sourcesContent":["import type { Representation } from '../representation/Representation';\nimport type { RepresentationMetadata } from '../representation/RepresentationMetadata';\nimport type { ResourceIdentifier } from '../representation/ResourceIdentifier';\nimport type { AuxiliaryIdentifierStrategy } from './AuxiliaryIdentifierStrategy';\nimport type { AuxiliaryStrategy } from './AuxiliaryStrategy';\nimport type { MetadataGenerator } from './MetadataGenerator';\nimport type { Validator } from './Validator';\n\n/**\n * An {@link AuxiliaryStrategy} that provides its functionality through the combination of\n * an {@link AuxiliaryIdentifierStrategy}, {@link MetadataGenerator} and {@link Validator}.\n */\nexport class ComposedAuxiliaryStrategy implements AuxiliaryStrategy {\n  private readonly identifierStrategy: AuxiliaryIdentifierStrategy;\n  private readonly metadataGenerator?: MetadataGenerator;\n  private readonly validator?: Validator;\n  private readonly ownAuthorization: boolean;\n  private readonly requiredInRoot: boolean;\n\n  public constructor(identifierStrategy: AuxiliaryIdentifierStrategy, metadataGenerator?: MetadataGenerator,\n    validator?: Validator, ownAuthorization = false, requiredInRoot = false) {\n    this.identifierStrategy = identifierStrategy;\n    this.metadataGenerator = metadataGenerator;\n    this.validator = validator;\n    this.ownAuthorization = ownAuthorization;\n    this.requiredInRoot = requiredInRoot;\n  }\n\n  public getAuxiliaryIdentifier(identifier: ResourceIdentifier): ResourceIdentifier {\n    return this.identifierStrategy.getAuxiliaryIdentifier(identifier);\n  }\n\n  public getAuxiliaryIdentifiers(identifier: ResourceIdentifier): ResourceIdentifier[] {\n    return this.identifierStrategy.getAuxiliaryIdentifiers(identifier);\n  }\n\n  public isAuxiliaryIdentifier(identifier: ResourceIdentifier): boolean {\n    return this.identifierStrategy.isAuxiliaryIdentifier(identifier);\n  }\n\n  public getSubjectIdentifier(identifier: ResourceIdentifier): ResourceIdentifier {\n    return this.identifierStrategy.getSubjectIdentifier(identifier);\n  }\n\n  public usesOwnAuthorization(): boolean {\n    return this.ownAuthorization;\n  }\n\n  public isRequiredInRoot(): boolean {\n    return this.requiredInRoot;\n  }\n\n  public async addMetadata(metadata: RepresentationMetadata): Promise<void> {\n    if (this.metadataGenerator) {\n      return this.metadataGenerator.handleSafe(metadata);\n    }\n  }\n\n  public async validate(representation: Representation): Promise<void> {\n    if (this.validator) {\n      return this.validator.handleSafe(representation);\n    }\n  }\n}\n"]}