{"version":3,"file":"WwwAuthMetadataWriter.js","sourceRoot":"","sources":["../../../../src/http/output/metadata/WwwAuthMetadataWriter.ts"],"names":[],"mappings":";;;AACA,yDAAqD;AACrD,6DAAkD;AAElD,qDAAkD;AAElD;;GAEG;AACH,MAAa,qBAAsB,SAAQ,+BAAc;IAGvD,YAAmB,IAAY;QAC7B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAAmE;QACrF,MAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACtE,IAAI,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,MAAK,KAAK,EAAE;YAClC,sBAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1D;IACH,CAAC;CACF;AAdD,sDAcC","sourcesContent":["import type { HttpResponse } from '../../../server/HttpResponse';\nimport { addHeader } from '../../../util/HeaderUtil';\nimport { HTTP } from '../../../util/Vocabularies';\nimport type { RepresentationMetadata } from '../../representation/RepresentationMetadata';\nimport { MetadataWriter } from './MetadataWriter';\n\n/**\n * Adds the `WWW-Authenticate` header with the injected value in case the response status code is 401.\n */\nexport class WwwAuthMetadataWriter extends MetadataWriter {\n  private readonly auth: string;\n\n  public constructor(auth: string) {\n    super();\n    this.auth = auth;\n  }\n\n  public async handle(input: { response: HttpResponse; metadata: RepresentationMetadata }): Promise<void> {\n    const statusLiteral = input.metadata.get(HTTP.terms.statusCodeNumber);\n    if (statusLiteral?.value === '401') {\n      addHeader(input.response, 'WWW-Authenticate', this.auth);\n    }\n  }\n}\n"]}