{"version":3,"file":"ModifiedMetadataWriter.js","sourceRoot":"","sources":["../../../../src/http/output/metadata/ModifiedMetadataWriter.ts"],"names":[],"mappings":";;;AACA,4DAAsD;AACtD,yDAAqD;AACrD,6DAAgD;AAEhD,qDAAkD;AAElD;;GAEG;AACH,MAAa,sBAAuB,SAAQ,+BAAc;IACjD,KAAK,CAAC,MAAM,CAAC,KAAmE;QACrF,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,iBAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,QAAQ,EAAE;YACZ,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACtC,sBAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,eAAe,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SAChE;QACD,MAAM,IAAI,GAAG,oBAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACrC,IAAI,IAAI,EAAE;YACR,sBAAS,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;SACzC;IACH,CAAC;CACF;AAZD,wDAYC","sourcesContent":["import type { HttpResponse } from '../../../server/HttpResponse';\nimport { getETag } from '../../../storage/Conditions';\nimport { addHeader } from '../../../util/HeaderUtil';\nimport { DC } from '../../../util/Vocabularies';\nimport type { RepresentationMetadata } from '../../representation/RepresentationMetadata';\nimport { MetadataWriter } from './MetadataWriter';\n\n/**\n * A {@link MetadataWriter} that generates all the necessary headers related to the modification date of a resource.\n */\nexport class ModifiedMetadataWriter extends MetadataWriter {\n  public async handle(input: { response: HttpResponse; metadata: RepresentationMetadata }): Promise<void> {\n    const modified = input.metadata.get(DC.terms.modified);\n    if (modified) {\n      const date = new Date(modified.value);\n      addHeader(input.response, 'Last-Modified', date.toUTCString());\n    }\n    const etag = getETag(input.metadata);\n    if (etag) {\n      addHeader(input.response, 'ETag', etag);\n    }\n  }\n}\n"]}