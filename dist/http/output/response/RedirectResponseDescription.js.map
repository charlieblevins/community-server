{"version":3,"file":"RedirectResponseDescription.js","sourceRoot":"","sources":["../../../../src/http/output/response/RedirectResponseDescription.ts"],"names":[],"mappings":";;;AAAA,2BAAiC;AACjC,6DAAwD;AACxD,wFAAqF;AACrF,+DAA4D;AAE5D;;GAEG;AACH,MAAa,2BAA4B,SAAQ,yCAAmB;IAClE,YAAmB,QAAgB,EAAE,WAAW,GAAG,KAAK;QACtD,MAAM,QAAQ,GAAG,IAAI,+CAAsB,CAAC,EAAE,CAAC,yBAAU,CAAC,QAAQ,CAAC,EAAE,gBAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACxG,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;CACF;AALD,kEAKC","sourcesContent":["import { DataFactory } from 'n3';\nimport { SOLID_HTTP } from '../../../util/Vocabularies';\nimport { RepresentationMetadata } from '../../representation/RepresentationMetadata';\nimport { ResponseDescription } from './ResponseDescription';\n\n/**\n * Corresponds to a 301/302 response, containing the relevant location metadata.\n */\nexport class RedirectResponseDescription extends ResponseDescription {\n  public constructor(location: string, permanently = false) {\n    const metadata = new RepresentationMetadata({ [SOLID_HTTP.location]: DataFactory.namedNode(location) });\n    super(permanently ? 301 : 302, metadata);\n  }\n}\n"]}