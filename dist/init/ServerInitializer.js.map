{"version":3,"file":"ServerInitializer.js","sourceRoot":"","sources":["../../src/init/ServerInitializer.ts"],"names":[],"mappings":";;;AACA,+BAAiC;AAGjC,+CAA4C;AAE5C;;GAEG;AACH,MAAa,iBAAkB,SAAQ,yBAAW;IAMhD,YAAmB,aAAgC,EAAE,IAAY;QAC/D,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAEM,KAAK,CAAC,MAAM;QACjB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,QAAQ;QACnB,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,gBAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;SACzD;IACH,CAAC;CACF;AArBD,8CAqBC","sourcesContent":["import type { Server } from 'http';\nimport { promisify } from 'util';\nimport type { HttpServerFactory } from '../server/HttpServerFactory';\nimport type { Finalizable } from './final/Finalizable';\nimport { Initializer } from './Initializer';\n\n/**\n * Creates and starts an HTTP server.\n */\nexport class ServerInitializer extends Initializer implements Finalizable {\n  private readonly serverFactory: HttpServerFactory;\n  private readonly port: number;\n\n  private server?: Server;\n\n  public constructor(serverFactory: HttpServerFactory, port: number) {\n    super();\n    this.serverFactory = serverFactory;\n    this.port = port;\n  }\n\n  public async handle(): Promise<void> {\n    this.server = this.serverFactory.startServer(this.port);\n  }\n\n  public async finalize(): Promise<void> {\n    if (this.server) {\n      return promisify(this.server.close.bind(this.server))();\n    }\n  }\n}\n"]}