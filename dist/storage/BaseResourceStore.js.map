{"version":3,"file":"BaseResourceStore.js","sourceRoot":"","sources":["../../src/storage/BaseResourceStore.ts"],"names":[],"mappings":";;;AAIA,oFAAiF;AAIjF;;GAEG;AACH,sDAAsD;AACtD,MAAa,iBAAiB;IACrB,KAAK,CAAC,cAAc,CAAC,UAA8B,EAAE,UAAuB;QACjF,MAAM,IAAI,iDAAuB,EAAE,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,UAA8B,EAAE,WAAsC,EACnG,UAAuB;QACvB,MAAM,IAAI,iDAAuB,EAAE,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,iBAAiB,CAAC,UAA8B,EAAE,cAA8B,EAC3F,UAAuB;QACvB,MAAM,IAAI,iDAAuB,EAAE,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,SAA6B,EAAE,cAA8B,EACpF,UAAuB;QACvB,MAAM,IAAI,iDAAuB,EAAE,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,UAA8B,EACxD,UAAuB;QACvB,MAAM,IAAI,iDAAuB,EAAE,CAAC;IACtC,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,UAA8B,EAAE,KAAY,EACtE,UAAuB;QACvB,MAAM,IAAI,iDAAuB,EAAE,CAAC;IACtC,CAAC;CACF;AA7BD,8CA6BC","sourcesContent":["import type { Patch } from '../http/representation/Patch';\nimport type { Representation } from '../http/representation/Representation';\nimport type { RepresentationPreferences } from '../http/representation/RepresentationPreferences';\nimport type { ResourceIdentifier } from '../http/representation/ResourceIdentifier';\nimport { NotImplementedHttpError } from '../util/errors/NotImplementedHttpError';\nimport type { Conditions } from './Conditions';\nimport type { ModifiedResource, ResourceStore } from './ResourceStore';\n\n/**\n * Base implementation of ResourceStore for implementers of custom stores.\n */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport class BaseResourceStore implements ResourceStore {\n  public async resourceExists(identifier: ResourceIdentifier, conditions?: Conditions): Promise<boolean> {\n    throw new NotImplementedHttpError();\n  }\n\n  public async getRepresentation(identifier: ResourceIdentifier, preferences: RepresentationPreferences,\n    conditions?: Conditions): Promise<Representation> {\n    throw new NotImplementedHttpError();\n  }\n\n  public async setRepresentation(identifier: ResourceIdentifier, representation: Representation,\n    conditions?: Conditions): Promise<ModifiedResource[]> {\n    throw new NotImplementedHttpError();\n  }\n\n  public async addResource(container: ResourceIdentifier, representation: Representation,\n    conditions?: Conditions): Promise<ModifiedResource> {\n    throw new NotImplementedHttpError();\n  }\n\n  public async deleteResource(identifier: ResourceIdentifier,\n    conditions?: Conditions): Promise<ModifiedResource[]> {\n    throw new NotImplementedHttpError();\n  }\n\n  public async modifyResource(identifier: ResourceIdentifier, patch: Patch,\n    conditions?: Conditions): Promise<ModifiedResource[]> {\n    throw new NotImplementedHttpError();\n  }\n}\n"]}