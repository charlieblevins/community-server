{"version":3,"file":"RepresentationConverter.js","sourceRoot":"","sources":["../../../src/storage/conversion/RepresentationConverter.ts"],"names":[],"mappings":";;;AAGA,mEAAgE;AAiBhE;;GAEG;AACH,MAAsB,uBAAwB,SAAQ,2BAAyD;CAAG;AAAlH,0DAAkH","sourcesContent":["import type { Representation } from '../../http/representation/Representation';\nimport type { RepresentationPreferences } from '../../http/representation/RepresentationPreferences';\nimport type { ResourceIdentifier } from '../../http/representation/ResourceIdentifier';\nimport { AsyncHandler } from '../../util/handlers/AsyncHandler';\n\nexport interface RepresentationConverterArgs {\n  /**\n   * Identifier of the resource. Can be used as base IRI.\n   */\n  identifier: ResourceIdentifier;\n  /**\n   * Representation to convert.\n   */\n  representation: Representation;\n  /**\n   * Preferences indicating what is requested.\n   */\n  preferences: RepresentationPreferences;\n}\n\n/**\n * Converts a {@link Representation} from one media type to another, based on the given preferences.\n */\nexport abstract class RepresentationConverter extends AsyncHandler<RepresentationConverterArgs, Representation> {}\n"]}