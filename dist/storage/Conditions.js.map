{"version":3,"file":"Conditions.js","sourceRoot":"","sources":["../../src/storage/Conditions.ts"],"names":[],"mappings":";;;AACA,uDAA0C;AAsC1C;;;;;GAKG;AACH,SAAgB,OAAO,CAAC,QAAgC;IACtD,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,iBAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjD,IAAI,QAAQ,EAAE;QACZ,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtC,OAAO,IAAI,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC;KAC9B;AACH,CAAC;AAND,0BAMC","sourcesContent":["import type { RepresentationMetadata } from '../http/representation/RepresentationMetadata';\nimport { DC } from '../util/Vocabularies';\n\n/**\n * The conditions of an HTTP conditional request.\n */\nexport interface Conditions {\n  /**\n   * Valid if matching any of the given ETags.\n   */\n  matchesETag?: string[];\n  /**\n   * Valid if not matching any of the given ETags.\n   */\n  notMatchesETag?: string[];\n  /**\n   * Valid if modified since the given date.\n   */\n  modifiedSince?: Date;\n  /**\n   * Valid if not modified since the given date.\n   */\n  unmodifiedSince?: Date;\n\n  /**\n   * Checks validity based on the given metadata.\n   * @param metadata - Metadata of the representation. Undefined if the resource does not exist.\n   */\n  matchesMetadata: (metadata?: RepresentationMetadata) => boolean;\n  /**\n   * Checks validity based on the given ETag and/or date.\n   * This function assumes the resource being checked exists.\n   * If not, the `matchesMetadata` function should be used.\n   * @param eTag - Condition based on ETag.\n   * @param lastModified - Condition based on last modified date.\n   */\n  matches: (eTag?: string, lastModified?: Date) => boolean;\n}\n\n/**\n * Generates an ETag based on the last modified date of a resource.\n * @param metadata - Metadata of the resource.\n *\n * @returns the generated ETag. Undefined if no last modified date was found.\n */\nexport function getETag(metadata: RepresentationMetadata): string | undefined {\n  const modified = metadata.get(DC.terms.modified);\n  if (modified) {\n    const date = new Date(modified.value);\n    return `\"${date.getTime()}\"`;\n  }\n}\n"]}