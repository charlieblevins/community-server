{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^2.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@solid/community-server",
  "components": [
    {
      "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler",
      "@type": "Class",
      "requireElement": "AuthorizingHttpHandler",
      "extends": [
        "scs:dist/server/OperationHttpHandler#OperationHttpHandler"
      ],
      "comment": "Handles all the necessary steps for an authorization. Errors if authorization fails, otherwise passes the parameter to the operationHandler handler. The following steps are executed: - Extracting credentials from the request. - Extracting the required permissions. - Reading the allowed permissions for the credentials. - Validating if this operation is allowed.",
      "parameters": [
        {
          "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_credentialsExtractor",
          "range": "scs:dist/authentication/CredentialsExtractor#CredentialsExtractor",
          "comment": "Extracts the credentials from the incoming request.",
          "unique": true,
          "required": true
        },
        {
          "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_modesExtractor",
          "range": "scs:dist/authorization/permissions/ModesExtractor#ModesExtractor",
          "comment": "Extracts the required modes from the generated Operation.",
          "unique": true,
          "required": true
        },
        {
          "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_permissionReader",
          "range": "scs:dist/authorization/PermissionReader#PermissionReader",
          "comment": "Reads the permissions available for the Operation.",
          "unique": true,
          "required": true
        },
        {
          "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_authorizer",
          "range": "scs:dist/authorization/Authorizer#Authorizer",
          "comment": "Verifies if the requested operation is allowed.",
          "unique": true,
          "required": true
        },
        {
          "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_operationHandler",
          "range": "scs:dist/server/OperationHttpHandler#OperationHttpHandler",
          "comment": "Handler to call if the operation is authorized.",
          "unique": true,
          "required": true
        }
      ],
      "constructorArguments": [
        {
          "fields": [
            {
              "keyRaw": "credentialsExtractor",
              "value": {
                "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_credentialsExtractor"
              }
            },
            {
              "keyRaw": "modesExtractor",
              "value": {
                "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_modesExtractor"
              }
            },
            {
              "keyRaw": "permissionReader",
              "value": {
                "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_permissionReader"
              }
            },
            {
              "keyRaw": "authorizer",
              "value": {
                "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_authorizer"
              }
            },
            {
              "keyRaw": "operationHandler",
              "value": {
                "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandler_args_operationHandler"
              }
            }
          ]
        }
      ]
    },
    {
      "@id": "scs:dist/server/AuthorizingHttpHandler#AuthorizingHttpHandlerArgs",
      "@type": "AbstractClass",
      "requireElement": "AuthorizingHttpHandlerArgs",
      "extends": [],
      "parameters": [],
      "constructorArguments": []
    }
  ]
}