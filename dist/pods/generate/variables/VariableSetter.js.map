{"version":3,"file":"VariableSetter.js","sourceRoot":"","sources":["../../../../src/pods/generate/variables/VariableSetter.ts"],"names":[],"mappings":";;;AACA,uDAAoD;AAEpD;;;GAGG;AACH,MAAa,cAAe,SAAQ,iCAAe;IAKjD,YAAmB,QAAgB,EAAE,KAAa,EAAE,QAAQ,GAAG,KAAK;QAClE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAE,QAAQ,EAA6B;QACzD,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC7C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;SACtC;IACH,CAAC;CACF;AAjBD,wCAiBC","sourcesContent":["import type { PodSettings } from '../../settings/PodSettings';\nimport { VariableHandler } from './VariableHandler';\n\n/**\n * A VariableHandler that will set the given variable to the given value,\n * unless there already is a value for the variable and override is false.\n */\nexport class VariableSetter extends VariableHandler {\n  private readonly variable: string;\n  private readonly value: string;\n  private readonly override: boolean;\n\n  public constructor(variable: string, value: string, override = false) {\n    super();\n    this.variable = variable;\n    this.value = value;\n    this.override = override;\n  }\n\n  public async handle({ settings }: { settings: PodSettings }): Promise<void> {\n    if (this.override || !settings[this.variable]) {\n      settings[this.variable] = this.value;\n    }\n  }\n}\n"]}