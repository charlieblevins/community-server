{"version":3,"file":"ResourcesGenerator.js","sourceRoot":"","sources":["../../../src/pods/generate/ResourcesGenerator.ts"],"names":[],"mappings":"","sourcesContent":["import type { Representation } from '../../http/representation/Representation';\nimport type { ResourceIdentifier } from '../../http/representation/ResourceIdentifier';\nimport Dict = NodeJS.Dict;\n\nexport interface Resource {\n  identifier: ResourceIdentifier;\n  representation: Representation;\n}\n\n/**\n * Generator used to create resources relative to a given base identifier.\n * Note that this is not an AsyncHandler since it returns an AsyncIterable instead of a promise.\n */\nexport interface ResourcesGenerator {\n  /**\n   * Generates resources with the given options.\n   * The output Map should be sorted so that containers always appear before their contents.\n   * @param location - Base identifier.\n   * @param options - Options that can be used when generating resources.\n   *\n   * @returns A map where the keys are the identifiers and the values the corresponding representations to store.\n   */\n  generate: (location: ResourceIdentifier, options: Dict<string>) => AsyncIterable<Resource>;\n}\n"]}