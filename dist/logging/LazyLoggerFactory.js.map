{"version":3,"file":"LazyLoggerFactory.js","sourceRoot":"","sources":["../../src/logging/LazyLoggerFactory.ts"],"names":[],"mappings":";;;AAAA,6CAA0C;AAI1C;;;;;;;;GAQG;AACH,MAAa,iBAAiB;IAK5B;QACE,qBAAqB;IACvB,CAAC;IAEM,MAAM,CAAC,WAAW;QACvB,OAAO,iBAAiB,CAAC,QAAQ,CAAC;IACpC,CAAC;IAEM,YAAY,CAAC,KAAa;QAC/B,OAAO,IAAI,uBAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACrC,CAAC;IAEM,kBAAkB;QACvB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;IAClC,CAAC;IAED,IAAW,aAAa;QACtB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,MAAM,IAAI,KAAK,CAAC,2FAA2F,CAAC,CAAC;SAC9G;QACD,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,IAAW,aAAa,CAAC,aAA4B;QACnD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACtC,CAAC;;AA9BH,8CA+BC;AA9ByB,0BAAQ,GAAG,IAAI,iBAAiB,EAAE,CAAC","sourcesContent":["import { LazyLogger } from './LazyLogger';\nimport type { Logger } from './Logger';\nimport type { LoggerFactory } from './LoggerFactory';\n\n/**\n * Wraps over another {@link LoggerFactory} that can be set lazily.\n * This is a singleton class, for which the instance can be retrieved using {@link LazyLoggerFactory.getInstance}.\n *\n * Loggers can safely be created before a {@link LoggerFactory} is set.\n * But an error will be thrown if {@link Logger.log} is invoked before a {@link LoggerFactory} is set.\n *\n * This creates instances of {@link LazyLogger}.\n */\nexport class LazyLoggerFactory implements LoggerFactory {\n  private static readonly instance = new LazyLoggerFactory();\n\n  private ploggerFactory: LoggerFactory | undefined;\n\n  private constructor() {\n    // Singleton instance\n  }\n\n  public static getInstance(): LazyLoggerFactory {\n    return LazyLoggerFactory.instance;\n  }\n\n  public createLogger(label: string): Logger {\n    return new LazyLogger(this, label);\n  }\n\n  public resetLoggerFactory(): void {\n    this.ploggerFactory = undefined;\n  }\n\n  public get loggerFactory(): LoggerFactory {\n    if (!this.ploggerFactory) {\n      throw new Error('No logger factory has been set. Can be caused by logger invocation during initialization.');\n    }\n    return this.ploggerFactory;\n  }\n\n  public set loggerFactory(loggerFactory: LoggerFactory) {\n    this.ploggerFactory = loggerFactory;\n  }\n}\n"]}