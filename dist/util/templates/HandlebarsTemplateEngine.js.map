{"version":3,"file":"HandlebarsTemplateEngine.js","sourceRoot":"","sources":["../../../src/util/templates/HandlebarsTemplateEngine.ts"],"names":[],"mappings":";;;AAGA,2CAAqC;AAErC,qDAAgD;AAGhD;;GAEG;AACH,MAAa,wBAAwB;IAGnC;;OAEG;IACH,YAAmB,QAAmB;QACpC,IAAI,CAAC,aAAa,GAAG,6BAAY,CAAC,QAAQ,CAAC;aACxC,IAAI,CAAC,CAAC,cAAsB,EAAoB,EAAE,CAAC,oBAAO,CAAC,cAAc,CAAC,CAAC,CAAC;IACjF,CAAC;IAIM,KAAK,CAAC,MAAM,CAAc,QAAiB,EAAE,QAAmB;QACrE,MAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,oBAAO,CAAC,MAAM,6BAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC;QAClG,OAAO,aAAa,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;CACF;AAjBD,4DAiBC","sourcesContent":["/* eslint-disable tsdoc/syntax */\n// tsdoc/syntax cannot handle `@range`\nimport type { TemplateDelegate } from 'handlebars';\nimport { compile } from 'handlebars';\nimport type { TemplateEngine, Template } from './TemplateEngine';\nimport { readTemplate } from './TemplateEngine';\nimport Dict = NodeJS.Dict;\n\n/**\n * Fills in Handlebars templates.\n */\nexport class HandlebarsTemplateEngine<T extends Dict<any> = Dict<any>> implements TemplateEngine<T> {\n  private readonly applyTemplate: Promise<TemplateDelegate>;\n\n  /**\n   * @param template - The default template @range {json}\n   */\n  public constructor(template?: Template) {\n    this.applyTemplate = readTemplate(template)\n      .then((templateString: string): TemplateDelegate => compile(templateString));\n  }\n\n  public async render(contents: T): Promise<string>;\n  public async render<TCustom = T>(contents: TCustom, template: Template): Promise<string>;\n  public async render<TCustom = T>(contents: TCustom, template?: Template): Promise<string> {\n    const applyTemplate = template ? compile(await readTemplate(template)) : await this.applyTemplate;\n    return applyTemplate(contents);\n  }\n}\n"]}