{"version":3,"file":"EjsTemplateEngine.js","sourceRoot":"","sources":["../../../src/util/templates/EjsTemplateEngine.ts"],"names":[],"mappings":";;;AAGA,6BAAsC;AAEtC,qDAAqE;AAGrE;;GAEG;AACH,MAAa,iBAAiB;IAG5B;;OAEG;IACH,YAAmB,QAAmB;QACpC,gFAAgF;QAChF,MAAM,QAAQ,GAAG,oCAAmB,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,aAAa,GAAG,6BAAY,CAAC,QAAQ,CAAC;aACxC,IAAI,CAAC,CAAC,cAAsB,EAAoB,EAAE,CAAC,aAAO,CAAC,cAAc,EAAE,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC/F,CAAC;IAIM,KAAK,CAAC,MAAM,CAAc,QAAiB,EAAE,QAAmB;QACrE,MAAM,OAAO,GAAG,EAAE,GAAG,QAAQ,EAAE,QAAQ,EAAE,oCAAmB,CAAC,QAAQ,CAAC,EAAE,CAAC;QACzE,OAAO,QAAQ,CAAC,CAAC,CAAC,YAAM,CAAC,MAAM,6BAAY,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC;IACxG,CAAC;CACF;AAnBD,8CAmBC","sourcesContent":["/* eslint-disable tsdoc/syntax */\n// tsdoc/syntax cannot handle `@range`\nimport type { TemplateFunction } from 'ejs';\nimport { compile, render } from 'ejs';\nimport type { TemplateEngine, Template } from './TemplateEngine';\nimport { getTemplateFilePath, readTemplate } from './TemplateEngine';\nimport Dict = NodeJS.Dict;\n\n/**\n * Fills in EJS templates.\n */\nexport class EjsTemplateEngine<T extends Dict<any> = Dict<any>> implements TemplateEngine<T> {\n  private readonly applyTemplate: Promise<TemplateFunction>;\n\n  /**\n   * @param template - The default template @range {json}\n   */\n  public constructor(template?: Template) {\n    // EJS requires the `filename` parameter to be able to include partial templates\n    const filename = getTemplateFilePath(template);\n    this.applyTemplate = readTemplate(template)\n      .then((templateString: string): TemplateFunction => compile(templateString, { filename }));\n  }\n\n  public async render(contents: T): Promise<string>;\n  public async render<TCustom = T>(contents: TCustom, template: Template): Promise<string>;\n  public async render<TCustom = T>(contents: TCustom, template?: Template): Promise<string> {\n    const options = { ...contents, filename: getTemplateFilePath(template) };\n    return template ? render(await readTemplate(template), options) : (await this.applyTemplate)(options);\n  }\n}\n"]}