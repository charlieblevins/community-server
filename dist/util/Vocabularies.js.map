{"version":3,"file":"Vocabularies.js","sourceRoot":"","sources":["../../src/util/Vocabularies.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable function-paren-newline */\nimport { namedNode } from '@rdfjs/data-model';\nimport type { NamedNode } from 'rdf-js';\n\ntype RecordOf<TKey extends any[], TValue> = Record<TKey[number], TValue>;\n\nexport type Namespace<TKey extends any[], TValue> =\n  { namespace: TValue } & RecordOf<TKey, TValue>;\n\n/**\n * Creates a function that expands local names from the given base URI,\n * and exports the given local names as properties on the returned object.\n */\nexport function createNamespace<TKey extends string, TValue>(\n  baseUri: string,\n  toValue: (expanded: string) => TValue,\n  ...localNames: TKey[]):\n  Namespace<typeof localNames, TValue> {\n  const expanded: Namespace<typeof localNames, TValue> = {} as any;\n  // Expose the main namespace\n  expanded.namespace = toValue(baseUri);\n  // Expose the listed local names as properties\n  for (const localName of localNames) {\n    (expanded as RecordOf<TKey[], TValue>)[localName] = toValue(`${baseUri}${localName}`);\n  }\n  return expanded;\n}\n\n/**\n * Creates a function that expands local names from the given base URI into strings,\n * and exports the given local names as properties on the returned object.\n */\nexport function createUriNamespace<T extends string>(baseUri: string, ...localNames: T[]):\nNamespace<typeof localNames, string> {\n  return createNamespace(baseUri, (expanded): string => expanded, ...localNames);\n}\n\n/**\n * Creates a function that expands local names from the given base URI into named nodes,\n * and exports the given local names as properties on the returned object.\n */\nexport function createTermNamespace<T extends string>(baseUri: string, ...localNames: T[]):\nNamespace<typeof localNames, NamedNode> {\n  return createNamespace(baseUri, namedNode, ...localNames);\n}\n\n/**\n * Creates a function that expands local names from the given base URI into string,\n * and exports the given local names as properties on the returned object.\n * Under the `terms` property, it exposes the expanded local names as named nodes.\n */\nexport function createUriAndTermNamespace<T extends string>(baseUri: string, ...localNames: T[]):\nNamespace<typeof localNames, string> & { terms: Namespace<typeof localNames, NamedNode> } {\n  return Object.assign(createUriNamespace(baseUri, ...localNames),\n    { terms: createTermNamespace(baseUri, ...localNames) });\n}\n\nexport const ACL = createUriAndTermNamespace('http://www.w3.org/ns/auth/acl#',\n  'accessTo',\n  'agent',\n  'agentClass',\n  'agentGroup',\n  'AuthenticatedAgent',\n  'Authorization',\n  'default',\n  'mode',\n\n  'Write',\n  'Read',\n  'Append',\n  'Control',\n);\n\nexport const AUTH = createUriAndTermNamespace('urn:solid:auth:',\n  'userMode',\n  'publicMode',\n);\n\nexport const DC = createUriAndTermNamespace('http://purl.org/dc/terms/',\n  'description',\n  'modified',\n  'title',\n);\n\nexport const FOAF = createUriAndTermNamespace('http://xmlns.com/foaf/0.1/',\n  'Agent',\n);\n\nexport const HTTP = createUriAndTermNamespace('http://www.w3.org/2011/http#',\n  'statusCodeNumber',\n);\n\nexport const LDP = createUriAndTermNamespace('http://www.w3.org/ns/ldp#',\n  'contains',\n\n  'BasicContainer',\n  'Container',\n  'Resource',\n);\n\nexport const MA = createUriAndTermNamespace('http://www.w3.org/ns/ma-ont#',\n  'format',\n);\n\nexport const OIDC = createUriAndTermNamespace('http://www.w3.org/ns/solid/oidc#',\n  'redirect_uris',\n);\n\nexport const PIM = createUriAndTermNamespace('http://www.w3.org/ns/pim/space#',\n  'Storage',\n);\n\nexport const POSIX = createUriAndTermNamespace('http://www.w3.org/ns/posix/stat#',\n  'mtime',\n  'size',\n);\n\nexport const RDF = createUriAndTermNamespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n  'type',\n);\n\nexport const SOLID = createUriAndTermNamespace('http://www.w3.org/ns/solid/terms#',\n  'oidcIssuer',\n  'oidcIssuerRegistrationToken',\n  'oidcRegistration',\n);\n\nexport const SOLID_ERROR = createUriAndTermNamespace('urn:npm:solid:community-server:error:',\n  'stack',\n);\n\nexport const SOLID_HTTP = createUriAndTermNamespace('urn:npm:solid:community-server:http:',\n  'location',\n  'slug',\n);\n\nexport const SOLID_META = createUriAndTermNamespace('urn:npm:solid:community-server:meta:',\n  // This identifier is used as graph for all metadata that is generated on the fly and should not be stored\n  'ResponseMetadata',\n  // This is used to identify templates that can be used for the representation of a resource\n  'template',\n);\n\nexport const VANN = createUriAndTermNamespace('http://purl.org/vocab/vann/',\n  'preferredNamespacePrefix',\n);\n\nexport const VCARD = createUriAndTermNamespace('http://www.w3.org/2006/vcard/ns#',\n  'hasMember',\n);\n\nexport const XSD = createUriAndTermNamespace('http://www.w3.org/2001/XMLSchema#',\n  'dateTime',\n  'integer',\n);\n\n// Alias for commonly used types\nexport const CONTENT_TYPE = MA.format;\nexport const CONTENT_TYPE_TERM = MA.terms.format;\nexport const PREFERRED_PREFIX = VANN.preferredNamespacePrefix;\nexport const PREFERRED_PREFIX_TERM = VANN.terms.preferredNamespacePrefix;\n"]}