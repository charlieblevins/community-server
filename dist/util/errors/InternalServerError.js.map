{"version":3,"file":"InternalServerError.js","sourceRoot":"","sources":["../../../src/util/errors/InternalServerError.ts"],"names":[],"mappings":";;;AACA,2CAAwC;AACxC;;GAEG;AACH,MAAa,mBAAoB,SAAQ,qBAAS;IAChD,YAAmB,OAAgB,EAAE,OAA0B;QAC7D,KAAK,CAAC,GAAG,EAAE,qBAAqB,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,KAAU;QACjC,OAAO,qBAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,UAAU,KAAK,GAAG,CAAC;IACjE,CAAC;CACF;AARD,kDAQC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { HttpError } from './HttpError';\n/**\n * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\n */\nexport class InternalServerError extends HttpError {\n  public constructor(message?: string, options?: HttpErrorOptions) {\n    super(500, 'InternalServerError', message, options);\n  }\n\n  public static isInstance(error: any): error is InternalServerError {\n    return HttpError.isInstance(error) && error.statusCode === 500;\n  }\n}\n"]}