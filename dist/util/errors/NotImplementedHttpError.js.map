{"version":3,"file":"NotImplementedHttpError.js","sourceRoot":"","sources":["../../../src/util/errors/NotImplementedHttpError.ts"],"names":[],"mappings":";;;AACA,2CAAwC;AAExC;;;GAGG;AACH,MAAa,uBAAwB,SAAQ,qBAAS;IACpD,YAAmB,OAAgB,EAAE,OAA0B;QAC7D,KAAK,CAAC,GAAG,EAAE,yBAAyB,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1D,CAAC;IAEM,MAAM,CAAC,UAAU,CAAC,KAAU;QACjC,OAAO,qBAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,UAAU,KAAK,GAAG,CAAC;IACjE,CAAC;CACF;AARD,0DAQC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { HttpError } from './HttpError';\n\n/**\n * The server either does not recognize the request method, or it lacks the ability to fulfil the request.\n * Usually this implies future availability (e.g., a new feature of a web-service API).\n */\nexport class NotImplementedHttpError extends HttpError {\n  public constructor(message?: string, options?: HttpErrorOptions) {\n    super(501, 'NotImplementedHttpError', message, options);\n  }\n\n  public static isInstance(error: any): error is NotImplementedHttpError {\n    return HttpError.isInstance(error) && error.statusCode === 501;\n  }\n}\n"]}