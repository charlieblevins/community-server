{"version":3,"file":"SystemError.js","sourceRoot":"","sources":["../../../src/util/errors/SystemError.ts"],"names":[],"mappings":";;;AA2CA,SAAgB,aAAa,CAAC,KAAU;IACtC,OAAO,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC;AACrC,CAAC;AAFD,sCAEC","sourcesContent":["/**\n * Interface for Node.js System errors\n *\n * Node.js generates system errors when exceptions occur within its runtime environment.\n * These usually occur when an application violates an operating system constraint.\n * For example, a system error will occur if an application attempts to read a file that does not exist.\n */\nexport interface SystemError extends Error {\n  /**\n   * If present, the address to which a network connection failed.\n   */\n  address?: string;\n  /**\n   * The string error code.\n   * Full list: https://man7.org/linux/man-pages/man3/errno.3.html\n   */\n  code: string;\n  /**\n   * If present, the file path destination when reporting a file system error.\n   */\n  dest?: string;\n  /**\n   * The system-provided error number.\n   */\n  errno: number | string;\n  /**\n   * If present, extra details about the error condition.\n   */\n  info?: any;\n  /**\n   * If present, the file path when reporting a file system error.\n   */\n  path?: string;\n  /**\n   * If present, the network connection port that is not available.\n   */\n  port?: string;\n  /**\n   * The name of the system call that triggered the error.\n   */\n  syscall: string;\n}\n\nexport function isSystemError(error: any): error is SystemError {\n  return error.code && error.syscall;\n}\n"]}