{"version":3,"file":"InteractionRoute.js","sourceRoot":"","sources":["../../../../src/identity/interaction/routing/InteractionRoute.ts"],"names":[],"mappings":"","sourcesContent":["import type { Operation } from '../../../http/Operation';\nimport type { Interaction, InteractionHandlerResult } from '../email-password/handler/InteractionHandler';\n\nexport type TemplatedInteractionResult<T extends InteractionHandlerResult = InteractionHandlerResult> = T & {\n  templateFiles: Record<string, string>;\n};\n\n/**\n * Handles the routing behaviour for IDP handlers.\n */\nexport interface InteractionRoute {\n  /**\n   * Returns the control fields that should be added to response objects.\n   * Keys are control names, values are relative URL paths.\n   */\n  getControls: () => Record<string, string>;\n\n  /**\n   * If this route supports the given path.\n   * @param path - Relative URL path.\n   * @param prompt - Session prompt if there is one.\n   */\n  supportsPath: (path: string, prompt?: string) => boolean;\n\n  /**\n   * Handles the given operation.\n   * @param operation - Operation to handle.\n   * @param oidcInteraction - Interaction if there is one.\n   *\n   * @returns InteractionHandlerResult appended with relevant template files.\n   */\n  handleOperation: (operation: Operation, oidcInteraction?: Interaction) => Promise<TemplatedInteractionResult>;\n}\n"]}