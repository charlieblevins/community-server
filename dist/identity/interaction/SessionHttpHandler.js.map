{"version":3,"file":"SessionHttpHandler.js","sourceRoot":"","sources":["../../../src/identity/interaction/SessionHttpHandler.ts"],"names":[],"mappings":";;;AAAA,uFAAoF;AACpF,sDAAuD;AACvD,oFAAiF;AAGjF;;GAEG;AACH,MAAa,kBAAmB,SAAQ,uCAAkB;IACjD,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,eAAe,EAA2B;QACzE,IAAI,CAAC,CAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,OAAO,CAAA,EAAE;YAC7B,MAAM,IAAI,iDAAuB,CAAC,uDAAuD,CAAC,CAAC;SAC5F;QAED,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM,2BAAc,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/D,OAAO;YACL,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE,EAAE,KAAK,EAAE,eAAe,CAAC,OAAO,CAAC,SAAS,EAAE,cAAc,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE;SACzF,CAAC;IACJ,CAAC;CACF;AAZD,gDAYC","sourcesContent":["import { NotImplementedHttpError } from '../../util/errors/NotImplementedHttpError';\nimport { readJsonStream } from '../../util/StreamUtil';\nimport { InteractionHandler } from './email-password/handler/InteractionHandler';\nimport type { InteractionCompleteResult, InteractionHandlerInput } from './email-password/handler/InteractionHandler';\n\n/**\n * Simple InteractionHttpHandler that sends the session accountId to the InteractionCompleter as webId.\n */\nexport class SessionHttpHandler extends InteractionHandler {\n  public async handle({ operation, oidcInteraction }: InteractionHandlerInput): Promise<InteractionCompleteResult> {\n    if (!oidcInteraction?.session) {\n      throw new NotImplementedHttpError('Only interactions with a valid session are supported.');\n    }\n\n    const { remember } = await readJsonStream(operation.body.data);\n    return {\n      type: 'complete',\n      details: { webId: oidcInteraction.session.accountId, shouldRemember: Boolean(remember) },\n    };\n  }\n}\n"]}